local player = game.Players.LocalPlayer

if game.PlaceId == 14722542056 then
    local displayPlayers = game:GetService("ReplicatedStorage"):WaitForChild("displayPlayers")
    local playerStats = displayPlayers:FindFirstChild(player.Name):WaitForChild("stats")
    local characterValue = playerStats:WaitForChild("character")

    local function canUseDash()
        return characterValue.Value:lower() == "shadow"
    end

    local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
    gui.Name = "DashGUI"

    local dashButton = Instance.new("ImageButton")
    dashButton.Size = UDim2.new(0, 60, 0, 60)
    dashButton.Position = UDim2.new(1, -80, 0.6, -30)
    dashButton.Image = "rbxassetid://138028806969115"
    dashButton.BackgroundTransparency = 1
    dashButton.Parent = gui
    dashButton.Active = true
    dashButton.Draggable = true
    dashButton.Visible = canUseDash()

    local uicorner = Instance.new("UICorner", dashButton)
    uicorner.CornerRadius = UDim.new(1, 0)

    local cooldown = false

    local function activateDash()
        if cooldown or not canUseDash() then return end

        cooldown = true
        dashButton.BackgroundTransparency = 0.7

        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

        -- **Animación**
        local dashAnim = Instance.new("Animation")
        dashAnim.AnimationId = "rbxassetid://14465982605"
        local animTrack = humanoid:LoadAnimation(dashAnim)
        animTrack:Play()

        -- **Sonido de dash**
        local dashSound = Instance.new("Sound", humanoidRootPart)
        dashSound.SoundId = "rbxassetid://18400344659"
        dashSound.Volume = 2
        dashSound:Play()

        -- **Impulso del dash**
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(1000000, 1000000, 1000000)
        bodyVelocity.Velocity = humanoidRootPart.CFrame.LookVector * (52 * 4) -- **Menos potencia**
        bodyVelocity.Parent = humanoidRootPart

        -- **Mantenimiento en el aire**
        local isAirborne = humanoid:GetState() == Enum.HumanoidStateType.Freefall
        local antiGravity
        if isAirborne then
            antiGravity = Instance.new("BodyForce")
            antiGravity.Force = Vector3.new(0, workspace.Gravity * humanoidRootPart.AssemblyMass * 0.9, 0) -- **Menos fuerza**
            antiGravity.Parent = humanoidRootPart
        end

        task.wait(0.35) -- **Duración balanceada**

        -- **Finalización del dash**
        bodyVelocity:Destroy()
        if antiGravity then
            antiGravity:Destroy()
        end
        dashSound:Destroy()
        animTrack:Stop()
        humanoid:Move(Vector3.new(0, 0, 0))

        -- **Cooldown**
        task.delay(35, function() -- **Aumento de cooldown**
            cooldown = false
            dashButton.BackgroundTransparency = 1
        end)
    end

    dashButton.MouseButton1Click:Connect(activateDash)

    characterValue.Changed:Connect(function()
        dashButton.Visible = canUseDash()
    end)
end
